openapi: 3.0.1
info:
  title: Van Alert
  description:
    Get a timely alert for your desired Van relocations. This website uses
    ntfy.sh. Chuck me a Coffee if you want to support me and the server costs at https://buymeacoffee.com/dder
  termsOfService: https://van-alert.com/terms/
  contact:
    email: rootjdev@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: /v1
    description: Development
tags:
  - name: alert
    description: Everything about your Alerts
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: destination
    description: Operations for one particular destination
    externalDocs:
      description: Find out more about the notification system at ntfy.sh
      url: https://ntfy.sh
paths:
  /dest:
    post:
      tags:
        - destination
      summary: Creates a new ntfy.sh destination
      operationId: CreateDest
      requestBody:
        description: Destination object that needs to be added notifier
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Destination"
        required: true
      responses:
        "201":
          description: Successfully created destination
          content: {}
        "409":
          description: Destination already exists
          content: {}
      x-codegen-request-body-name: body
  /dest/{destinationIdentifier}:
    delete:
      tags:
        - destination
      summary: Deletes an existing new ntfy.sh destination
      operationId: DeleteDest
      parameters:
        - name: destinationIdentifier
          in: path
          description: Identifier of destination
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successfully deleted destination and all alerts under it
          content: {}
        "404":
          description: Destination not found
          content: {}
  /dest/{destinationIdentifier}/alerts:
    get:
      tags:
        - alert
        - destination
      summary: Find all alerts by destinationIdentifier
      description: Returns all alerts that are saved for this particular destinationIdentifier
      operationId: getAlertByDestinationIdentifier
      parameters:
        - name: destinationIdentifier
          in: path
          description: Identifier of destination
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Alert"
        "400":
          description: Invalid destID supplied
          content: {}
        "404":
          description: Destination not found by destinationIdentifier
          content: {}
    post:
      tags:
        - alert
        - destination
      summary: Add a new alert to the db
      operationId: addAlert
      parameters:
        - name: destinationIdentifier
          in: path
          description: Identifier of destination for which to add the alert
          required: true
          schema:
            type: string
      requestBody:
        description: Alert object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Alert"
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  /dest/{destinationIdentifier}/alerts/{alertId}:
    put:
      tags:
        - alert
        - destination
      summary: Update an existing alert
      operationId: updateAlert
      parameters:
        - name: destinationIdentifier
          in: path
          description: Identifier of destination
          required: true
          schema:
            type: string
        - name: alertId
          in: path
          description: Id of the alert
          required: true
          schema:
            type: string
      requestBody:
        description: Alert object that needs to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Alert"
        required: true
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Alert not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
        - alert
      summary: Deletes an alert
      operationId: deleteAlert
      parameters:
        - name: destinationIdentifier
          in: path
          description: destinationIdentifier of the Alert to delete
          required: true
          schema:
            type: string
        - name: alertId
          in: path
          description: alertId of the Alert to delete
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Invalid ID(s) supplied
          content: {}
        "404":
          description: Alert not found for given Destination
          content: {}
components:
  schemas:
    Destination:
      type: object
      properties:
        id:
          type: integer
          format: int64
          x-field-extra-annotation: "@jakarta.persistence.Id @jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)"

        identifier:
          type: string
    Alert:
      type: object
      properties:
        id:
          type: integer
          format: int64
          x-field-extra-annotation: "@jakarta.persistence.Id @jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)"
        begin:
          $ref: "#/components/schemas/City"
        finish:
          $ref: "#/components/schemas/City"
        expire:
          type: string
          format: date-time
        activeClients:
          type: array
          items:
            $ref: "#/components/schemas/Client"
    City:
      type: string
      enum:
        - SYD
        - ADL
        - MEL
        - OOL
        - PER
        - AKL
    Client:
      type: string
      enum:
        - COS
        - IMO
  parameters:
    destinationIdentifier:
      name: destinationIdentifier
      in: path
      description: Identifier of destination
      required: true
      schema:
        type: string
    alertId:
      name: alertId
      in: path
      description: Id of the alert
      required: true
      schema:
        type: int
x-original-swagger-version: "2.0"
